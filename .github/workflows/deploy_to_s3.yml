name: deploy to S3

on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install Node.js version 16.20.0
        uses: actions/setup-node@v3
        with: 
          node-version: '16.20.0'
          
      - name: Set up Yarn 1.22.19
        run: npm install -g yarn@1.22.19
        
      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build
        
      - name: Upload build directory
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/
          
  s3-deploy-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || (github.event_name == 'pull_request' && github.base_ref == 'refs/heads/develop')
    needs: [build]
    environment: dev
    steps: 
      - name: Checkout the repository
        uses: actions/checkout@v3
        
      - name: Download build directory
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build/
      
      - name: If build directory is empty, exit with error
        run: |
          if [ -z "$(ls -A build)" ]; then
            echo "'build' directory is empty!"
            exit 1  # Fail the workflow if the 'build' directory is empty.
          else
            echo "'build' directory is not empty."
          fi
      
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: 'build'
     
  s3-deploy-prd:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [build]
    environment: prd
    steps:  
        
      - name: Download build directory
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build/
          
      - name: If build directory is empty, exit with error
        run: |
          if [ -z "$(ls -A build)" ]; then
            echo "'build' directory is empty!"
            exit 1  # Fail the workflow if the 'build' directory is empty.
          else
            echo "'build' directory is not empty."
          fi
          
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: 'build'

  docker-deploy-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || (github.event_name == 'pull_request' && github.base_ref == 'refs/heads/develop')
    environment: dev
    steps:

      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Install Make
        run: sudo apt-get update && sudo apt-get install -y make

      - name: Build and Push static-build and nginx-deploy docker images
        run: |
          make build-docker-static-build-test &&
          make push-docker-static-build-test &&
          make run-docker-static-build-test &&
          make build-docker-nginx-deploy-test &&
          make push-docker-nginx-deploy-test

  docker-deploy-prd:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: prd
    steps:

      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Install Make
        run: sudo apt-get update && sudo apt-get install -y make

      - name: Build and Push static-build and nginx-deploy docker images
        run: |
          make build-docker-static-build &&
          make push-docker-static-build &&
          make run-docker-static-build &&
          make build-docker-nginx-deploy &&
          make push-docker-nginx-deploy
